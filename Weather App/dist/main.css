/*
 In your main.scss file, use the @import directive to import your reset SCSS file. The @import directive tells Sass to include the contents of another file in the current file.

For example, if you have a reset SCSS file called _reset.scss in a folder called styles, you would add the following line to your main.scss file: 

@import 'styles/reset';

*/
@import url("https://fonts.googleapis.com/css2?family=DM+Sans:ital,wght@0,400;0,500;0,700;1,400;1,500&display=swap");
*,
*::before,
*::after {
  box-sizing: border-box;
}

* {
  margin: 0;
}

html,
body {
  height: 100%;
}

body {
  line-height: 1.5;
  -webkit-font-smoothing: antialiased;
}

img,
picture,
video,
canvas,
svg {
  display: block;
  max-width: 100%;
}

input,
button,
textarea,
select {
  font: inherit;
}

p,
h1,
h2,
h3,
h4,
h5,
h6 {
  overflow-wrap: break-word;
}

#root,
#__next {
  isolation: isolate;
}

/* 
https://engageinteractive.co.uk/blog/top-10-scss-mixins

 Push auto

To quickly centre a block element without having to worry about if there is any top or bottom margin already applied.

*/
/* 
Pseudo

When using ::before and ::after you'll always need these three, so we're saving two lines of code every time you use this.

*/
/* 
See below an example of using it without any arguments (You will also see this mixin used in some of our other mixins below too).

div::after {
    @include pseudo;
    top: -1rem; left: -1rem;
    width: 1rem; height: 1rem;
}
*/
/* 
Responsive ratio

We use this for creating scalable elements (usually images / background images) that maintain a ratio.

*/
/* 

So to use this you could write the below and your div would have a ratio commonly utilised by video.

div {
    @include responsive-ratio(16,9);
}

*/
/* 
CSS triangles

This mixin takes all the hassle out of creating that triangle you'll see coming out of most traditional tooltips, all without images, you just specify it's colour, how big you want it, the direction it's going to come out of your element and you're done!

*/
/* 
Font styles

Take the pain out of setting styles for a font. (This assumes you have already included the font), set your fallback font once and you never have to worry again.

*/
/* 
Placeholders

They're a pain as you have to set the style in all the separate formats, this sorts it for you.

Just in case there are people how aren't used to using @content here is a usage example:

input,  
textarea {  
    @include input-placeholder {
        color: $grey;
    }
}

*/
/* 
 Media queries

A massive time saver! You can just use pixel values but we have some default breakpoints setup that work too, another time saver while keeping your breakpoints consistent.

*/
/* 
The example below showing the padding and font-size increasing once the viewport gets over 1024px.

.site-header {
    padding: 2rem;
    font-size: 1.8rem;
    @include mq('tablet-wide') {
        padding-top: 4rem;
        font-size: 2.4rem;
    }
}
*/
/* 
 Z-index

While technically this is just a pure function, but I felt it's worth being on the list as it's so easy to loose track of your z-index values when working in several different files, so we created this so that we could store them in one place for easy editing/recording. Just place this snippet in your main variables/settings.scss file (needs to be imported before any of your other files that reference a x-index of course).

*/
/* 
Then where ever you're wanting to use a z-index value, name it the same as your class and add in it into your variables/setting file, like below. You'll never have a "z-index: 99999999;" headache again.

.site-header {
    z-index: z('site-header');
}
*/
/* 
Hardware

Simple and effective for when you need to trigger hardware acceleration for some animation, keeping everything fast, slick and flicker-free.
*/
/* 
Truncate

Adding Truncation to an element isn't as simple as it should be, although it is with this handy time saver, meaning when you include the mixin, you only have to specify your boundry with a max width value, happy days!
*/
body {
  background-color: rgb(40, 95, 70);
}

div[data-weather-info], div[data-geo-info] {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: flex-start;
  background-color: cadetblue;
  height: 300px;
  border-radius: 10px;
  padding-top: 10px;
  padding-left: 10px;
  border: 1px solid red;
}

.container {
  background-color: rgba(255, 255, 255, 0.552);
  width: 90%;
  height: auto;
  margin-top: 50px;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  text-align: center;
  border-radius: 10px;
  margin-left: auto;
  margin-right: auto;
  font-family: "DM Sans", Helvetica, Arial, sans-serif;
  font-size: 20px;
  color: rgb(55, 50, 50);
  font-weight: 500;
  line-height: 140%;
}

.content {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
}

div[data-geo-info] {
  width: 40%;
  margin-top: 20px;
  margin-left: 20px;
  margin-bottom: 20px;
}

div[data-weather-info] {
  margin-top: 20px;
  width: 50%;
  margin-left: 20px;
  margin-bottom: 20px;
}

/*# sourceMappingURL=main.css.map */
